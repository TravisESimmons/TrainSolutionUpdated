// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using TrainWatchSystem.Entities;

namespace TrainWatchSystem.DAL
{
    public partial class TrainWatchContext : DbContext
    {
        public TrainWatchContext()
        {

        }

        public TrainWatchContext(DbContextOptions<TrainWatchContext> options)
            : base(options)
        {
        }

        public virtual DbSet<DbVersion> DbVersions { get; set; }

        public virtual DbSet<RailCarType> RailCarTypes { get; set; }
        public virtual DbSet<RollingStock> RollingStocks { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RailCarType>(entity =>
            {
                entity.Property(e => e.Commodity)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<RollingStock>(entity =>
            {
                entity.HasKey(e => e.ReportingMark)
                    .HasName("PK_RailCars");

                entity.ToTable("RollingStock");

                entity.Property(e => e.ReportingMark)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.InService)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                

                entity.Property(e => e.Owner)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.RailCarType)
                    .WithMany(p => p.RollingStocks)
                    .HasForeignKey(d => d.RailCarTypeID)
                    .HasConstraintName("FK_RollingStock_RailCarTypes");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}